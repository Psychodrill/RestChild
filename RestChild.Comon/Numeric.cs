using System;
using System.Collections.Generic;

namespace RestChild.Comon
{
    public static class Numeric
    {
        private static readonly Dictionary<long, Dictionary<int, string[]>> NumericNames =
            new Dictionary<long, Dictionary<int, string[]>>
            {
                {
                    1000, new Dictionary<int, string[]>
                    {
                        {0, new[] {"тысяча", "тысячи", "тысяче", "тысячью", "тысячу", "тысяче"}},
                        {1, new[] {"тысячи", "тысяч", "тысячам", "тысячами", "тысячи", "тысячах"}},
                        {2, new[] {"тысяч", "тысяч", "тысячам", "тысячами", "тысяч", "тысячах"}}
                    }
                },
                {
                    1000000, new Dictionary<int, string[]>
                    {
                        {0, new[] {"миллион", "миллиона", "миллиону", "миллионом", "миллион", "миллионе"}},
                        {1, new[] {"миллиона", "миллионов", "миллионам", "миллионами", "миллиона", "миллионах"}},
                        {2, new[] {"миллионов", "миллионов", "миллионам", "миллионами", "миллионов", "миллионах"}}
                    }
                },
                {
                    1000000000, new Dictionary<int, string[]>
                    {
                        {0, new[] {"миллиард", "миллиарда", "миллиарду", "миллиардом", "миллиард", "миллиарде"}},
                        {1, new[] {"миллиарда", "миллиардов", "миллиардам", "миллиардами", "миллиарда", "миллиардах"}},
                        {2, new[] {"миллиардов", "миллиардов", "миллиардам", "миллиардами", "миллиардов", "миллиардах"}}
                    }
                },
                {
                    1000000000000, new Dictionary<int, string[]>
                    {
                        {0, new[] {"триллион", "триллиона", "триллиону", "триллионом", "триллион", "триллионе"}},
                        {1, new[] {"триллиона", "триллионов", "триллионам", "триллионами", "триллиона", "триллионах"}},
                        {2, new[] {"триллионов", "триллионов", "триллионам", "триллионами", "триллионов", "триллионах"}}
                    }
                }
            };

        private static readonly Dictionary<bool, Dictionary<int, string[]>> HundredCases = new Dictionary
            <bool, Dictionary<int, string[]>>
            {
                {
                    false, new Dictionary<int, string[]>
                    {
                        {1, new[] {"сто", "ста", "ста", "ста", "сто", "ста"}},
                        {2, new[] {"двести", "двухсот", "двумстам", "двумястами", "двести", "двухстах"}},
                        {3, new[] {"триста", "трехсот", "тремстам", "тремястами", "триста", "трехстах"}},
                        {
                            4,
                            new[]
                            {
                                "четыреста", "четырехсот", "четыремстам", "четырьмястами", "четыреста", "четырехстах"
                            }
                        },
                        {5, new[] {"пятьсот", "пятисот", "пятистам", "пятьюстами", "пятьсот", "пятистах"}},
                        {6, new[] {"шестьсот", "шестисот", "шестистам", "шестьюстами", "шестьсот", "шестистах"}},
                        {7, new[] {"семьсот", "семисот", "семистам", "семьюстами", "семьсот", "семистах"}},
                        {8, new[] {"восемьсот", "восьмисот", "восьмистам", "восьмьюстами", "восемьсот", "восьмистах"}},
                        {9, new[] {"девятьсот", "девятисот", "девятистам", "девятьюстами", "девятьсот", "девятистах"}}
                    }
                },
                {
                    true, new Dictionary<int, string[]>
                    {
                        {1, new[] {"сотый", "сотого", "сотому", "сотым", "сотого", "сотом"}},
                        {2, new[] {"двухсотый", "двухсотого", "двухсотому", "двухсотым", "двухсотого", "двухсотом"}},
                        {3, new[] {"трехсотый", "трехсотого", "трехсотому", "трехсотым", "трехсотого", "трехсотом"}},
                        {
                            4,
                            new[]
                            {
                                "четырехсотый", "четырехсотого", "четырехсотому", "четырехсотым", "четырехсотого",
                                "четырехсотом"
                            }
                        },
                        {5, new[] {"пятисотый", "пятисотого", "пятисотому", "пятисотым", "пятисотого", "пятисотом"}},
                        {
                            6,
                            new[]
                            {
                                "шестисотый", "шестисотого", "шестисотомы", "шестисотым", "шестисотого", "шестисотом"
                            }
                        },
                        {7, new[] {"семисотый", "семисотого", "семисотому", "семисотым", "семисотого", "семисотом"}},
                        {
                            8,
                            new[]
                            {
                                "восьмисотый", "восьмисотого", "восьмисотому", "восьмисотым", "восьмисотого",
                                "восьмисотом"
                            }
                        },
                        {
                            9,
                            new[]
                            {
                                "девятисотый", "девятисотого", "девятисотому", "девятисотым", "девятисотого",
                                "девятисотом"
                            }
                        }
                    }
                }
            };

        private static readonly Dictionary<int, string[]> TenCases = new Dictionary<int, string[]>
        {
            {1, new[] {"десять", "десяти", "десяти", "десятью", "десять", "десяти"}},
            {2, new[] {"двадцать", "двадцати", "двадцати", "двадцатью", "двадцать", "двадцати"}},
            {3, new[] {"тридцать", "тридцати", "тридцати", "тридцатью", "тридцать", "тридцати"}},
            {4, new[] {"сорок", "сорока", "сорока", "сорока", "сорок", "сорока"}},
            {5, new[] {"пятьдесят", "пятидесяти", "пятидесяти", "пятьюдесятью", "пятьдесят", "пятидесяти"}},
            {6, new[] {"шестьдесят", "шестидесяти", "шестидесяти", "шестьюдесятью", "шестьдесят", "шестидесяти"}},
            {7, new[] {"семьдесят", "семидесяти", "семидесяти", "семьюдесятью", "семьдесят", "семидесяти"}},
            {8, new[] {"восемьдесят", "восьмидесяти", "восьмидесяти", "восьмьюдесятью", "восемьдесят", "восьмидесяти"}},
            {9, new[] {"девяносто", "девяноста", "девяноста", "девяноста", "девяносто", "девяноста"}}
        };

        private static readonly Dictionary<Sex, Dictionary<int, string[]>> OrdinalTenCases =
            new Dictionary<Sex, Dictionary<int, string[]>>
            {
                {
                    Sex.Male, new Dictionary<int, string[]>
                    {
                        {1, new[] {"десятый", "десятого", "десятому", "десятым", "десятого", "десятом"}},
                        {2, new[] {"двадцатый", "двадцатого", "двадцатому", "двадцатым", "двадцатого", "двадцатом"}},
                        {3, new[] {"тридцатый", "тридцатого", "тридцатому", "тридцатым", "тридцатого", "тридцатом"}},
                        {4, new[] {"сороковой", "сорокового", "сороковому", "сороковым", "сорокового", "сороковом"}},
                        {
                            5,
                            new[]
                            {
                                "пятидесятый", "пятидесятого", "пятидесятому", "пятидесятым", "пятьдесятого",
                                "пятидесятом"
                            }
                        },
                        {
                            6,
                            new[]
                            {
                                "шестидесятый", "шестидесятого", "шестидесятому", "шестидесятым", "шестьдесятого",
                                "шестидесятом"
                            }
                        },
                        {
                            7,
                            new[]
                            {
                                "семидесятый", "семидесятого", "семидесятому", "семидесятым", "семьдесятого",
                                "семидесятом"
                            }
                        },
                        {
                            8,
                            new[]
                            {
                                "восьмидесятый", "восьмидесятого", "восьмидесятому", "восьмидесятым", "восемьдесятого",
                                "восьмидесятом"
                            }
                        },
                        {
                            9,
                            new[]
                            {
                                "девяностый", "девяностого", "девяностому", "девяностым", "девяностого", "девяностом"
                            }
                        }
                    }
                },
                {
                    Sex.Female, new Dictionary<int, string[]>
                    {
                        {1, new[] {"десятая", "десятой", "десятой", "десятой", "десятую", "десятой"}},
                        {2, new[] {"двадцатая", "двадцатой", "двадцатой", "двадцатой", "двадцатую", "двадцати"}},
                        {3, new[] {"тридцатая", "тридцатой", "тридцатой", "тридцатой", "тридцатую", "тридцати"}},
                        {4, new[] {"сороковая", "сороковой", "сороковой", "сороковой", "сороковую", "сорока"}},
                        {
                            5,
                            new[]
                            {
                                "пятидесятая", "пятидесятой", "пятидесятой", "пятидесятой", "пятидесятую", "пятидесяти"
                            }
                        },
                        {
                            6,
                            new[]
                            {
                                "шестидесятая", "шестидесятой", "шестидесятой", "шестидесятой", "шестидесятую",
                                "шестидесяти"
                            }
                        },
                        {
                            7,
                            new[]
                            {
                                "семидесятая", "семидесятой", "семидесятой", "семидесятой", "семидесятую", "семидесяти"
                            }
                        },
                        {
                            8,
                            new[]
                            {
                                "восьмидесятая", "восьмидесятой", "восьмидесятой", "восьмидесятой", "восьмидесятую",
                                "восьмидесяти"
                            }
                        },
                        {9, new[] {"девяностая", "девяностой", "девяностой", "девяностой", "девяностую", "девяноста"}}
                    }
                },
                {
                    Sex.Neuter, new Dictionary<int, string[]>
                    {
                        {1, new[] {"десятое", "десятого", "десятому", "десятым", "десятого", "десятом"}},
                        {2, new[] {"двадцатое", "двадцатого", "двадцатому", "двадцатым", "двадцатого", "двадцатом"}},
                        {3, new[] {"тридцатое", "тридцатого", "тридцатому", "тридцатым", "тридцатого", "тридцатом"}},
                        {4, new[] {"сороковое", "сорокового", "сороковому", "сороковым", "сорокового", "сороковом"}},
                        {
                            5,
                            new[]
                            {
                                "пятидесятое", "пятидесятого", "пятидесятому", "пятидесятым", "пятьдесятого",
                                "пятидесятом"
                            }
                        },
                        {
                            6,
                            new[]
                            {
                                "шестидесятое", "шестидесятого", "шестидесятому", "шестидесятым", "шестьдесятого",
                                "шестидесятом"
                            }
                        },
                        {
                            7,
                            new[]
                            {
                                "семидесятое", "семидесятого", "семидесятому", "семидесятым", "семьдесятого",
                                "семидесятом"
                            }
                        },
                        {
                            8,
                            new[]
                            {
                                "восьмидесятое", "восьмидесятого", "восьмидесятому", "восьмидесятым", "восемьдесятого",
                                "восьмидесятом"
                            }
                        },
                        {
                            9,
                            new[]
                            {
                                "девяностое", "девяностого", "девяностому", "девяностым", "девяностого", "девяностом"
                            }
                        }
                    }
                }
            };

        private static readonly Dictionary<int, string[]> OneCases = new Dictionary<int, string[]>
        {
            {3, new[] {"три", "трех", "трем", "тремя", "три", "трех"}},
            {4, new[] {"четыре", "четырех", "четырем", "четырьмя", "четыре", "четырех"}},
            {5, new[] {"пять", "пяти", "пяти", "пятью", "пять", "пяти"}},
            {6, new[] {"шесть", "шести", "шести", "шестью", "шесть", "шести"}},
            {7, new[] {"семь", "семи", "семи", "семью", "семь", "семи"}},
            {8, new[] {"восемь", "восьми", "восьми", "восьмью", "восемь", "восьми"}},
            {9, new[] {"девять", "девяти", "девяти", "девятью", "девять", "девяти"}},
            {11, new[] {"одиннадцать", "одиннадцати", "одиннадцати", "одиннадцатью", "одиннадцать", "одиннадцати"}},
            {12, new[] {"двенадцать", "двенадцати", "двенадцати", "двенадцатью", "двенадцать", "двенадцати"}},
            {13, new[] {"тринадцать", "тринадцати", "тринадцати", "тринадцатью", "тринадцать", "тринадцати"}},
            {
                14,
                new[] {"четырнадцать", "четырнадцати", "четырнадцати", "четырнадцатью", "четырнадцать", "четырнадцати"}
            },
            {15, new[] {"пятнадцать", "пятнадцати", "пятнадцати", "пятнадцатью", "пятнадцать", "пятнадцати"}},
            {16, new[] {"шестнадцать", "шестнадцати", "шестнадцати", "шестнадцатью", "шестнадцать", "шестнадцати"}},
            {17, new[] {"семнадцать", "семнадцати", "семнадцати", "семнадцатью", "семнадцать", "семнадцати"}},
            {
                18,
                new[] {"восемнадцать", "восемнадцати", "восемнадцати", "восемнадцатью", "восемнадцать", "восемнадцати"}
            },
            {
                19,
                new[] {"девятнадцать", "девятнадцати", "девятнадцати", "девятнадцатью", "девятнадцать", "девятнадцати"}
            }
        };

        private static readonly Dictionary<int, string[]> OrdinalOneCases = new Dictionary<int, string[]>
        {
            {1, new[] {"первый", "первого", "первому", "первым", "первого", "первом"}},
            {2, new[] {"второй", "второго", "второму", "вторым", "второго", "втором"}},
            {3, new[] {"третий", "третьего", "третьему", "третьим", "третьего", "третьем"}},
            {4, new[] {"четвертый", "четвертого", "четвертому", "четвертым", "четвертого", "четвертом"}},
            {5, new[] {"пятый", "пятого", "пятому", "пятым", "пятого", "пяти"}},
            {6, new[] {"шестой", "шестого", "шестому", "шестым", "шестого", "шести"}},
            {7, new[] {"седьмой", "седьмого", "седьмому", "седьмым", "седьмого", "семи"}},
            {8, new[] {"восьмой", "восьмого", "восьмому", "восьмым", "восьмого", "восьми"}},
            {9, new[] {"девятый", "девятого", "девятому", "девятым", "девятого", "девяти"}},
            {
                11,
                new[] {"одиннадцатый", "одиннадцатого", "одиннадцатому", "одиннадцатым", "одиннадцатого", "одиннадцати"}
            },
            {12, new[] {"двенадцатый", "двенадцатого", "двенадцатому", "двенадцатым", "двенадцатого", "двенадцати"}},
            {13, new[] {"тринадцатый", "тринадцатого", "тринадцатому", "тринадцатым", "тринадцатого", "тринадцати"}},
            {
                14,
                new[]
                {
                    "четырнадцатый", "четырнадцатого", "четырнадцатому", "четырнадцатым", "четырнадцатого",
                    "четырнадцати"
                }
            },
            {15, new[] {"пятнадцатый", "пятнадцатого", "пятнадцатому", "пятнадцатым", "пятнадцатого", "пятнадцати"}},
            {
                16,
                new[] {"шестнадцатый", "шестнадцатого", "шестнадцатому", "шестнадцатым", "шестнадцатого", "шестнадцати"}
            },
            {17, new[] {"семнадцатый", "семнадцатого", "семнадцатому", "семнадцатым", "семнадцатого", "семнадцати"}},
            {
                18,
                new[]
                {
                    "восемнадцатый", "восемнадцатого", "восемнадцатому", "восемнадцатым", "восемнадцатого",
                    "восемнадцати"
                }
            },
            {
                19,
                new[]
                {
                    "девятнадцатый", "девятнадцатого", "девятнадцатому", "девятнадцатым", "девятнадцатого",
                    "девятнадцати"
                }
            }
        };

        private static readonly Dictionary<int, Dictionary<Sex, string[]>> SexOneCases =
            new Dictionary<int, Dictionary<Sex, string[]>>
            {
                {
                    1, new Dictionary<Sex, string[]>
                    {
                        {Sex.Female, new[] {"одна", "одной", "одной", "одной", "одну", "одной"}},
                        {Sex.Male, new[] {"один", "одного", "одному", "одним", null, "одном"}},
                        {Sex.Neuter, new[] {"одно", "одного", "одному", "одним", "одного", "одном"}}
                    }
                },
                {
                    2, new Dictionary<Sex, string[]>
                    {
                        {Sex.Female, new[] {"две", "двух", "двум", "двумя", "две", "двух"}},
                        {Sex.Male, new[] {"два", "двух", "двум", "двумя", null, "двух"}},
                        {Sex.Neuter, new[] {"два", "двух", "двум", "двумя", "два", "двух"}}
                    }
                }
            };

        private static readonly Dictionary<long, Sex> DenomintarorSexes = new Dictionary<long, Sex>
        {
            {1000, Sex.Female},
            {1000000, Sex.Male},
            {1000000000, Sex.Male},
            {1000000000000, Sex.Male}
        };

        public static string GetWrittenNumeric(long numeric, Case @case, Sex sex, bool ordinal, bool animated)
        {
            string result;

            if (numeric >= 1000000000000000)
            {
                throw new OverflowException("Numeric is too big: quadrillions are not supported");
            }

            long denominator = 1;

            if (numeric == 0)
            {
                result = "нуль";
            }
            else
            {
                result = string.Empty;

                while (numeric > 0)
                {
                    var count = (int) (numeric % 1000);
                    if (count > 0)
                    {
                        var rank = GetRank(@case, denominator, count,
                            denominator == 1 ? sex : DenomintarorSexes[denominator],
                            ordinal && string.IsNullOrEmpty(result), animated);

                        if (string.IsNullOrEmpty(result))
                        {
                            result = rank;
                        }
                        else
                        {
                            result = rank + " " + result;
                        }
                    }

                    denominator *= 1000;
                    numeric /= 1000;
                }

                result = result.Trim();
            }

            return result;
        }

        private static string GetRank(Case @case, long denominator, int count, Sex sex, bool ordinal, bool animated)
        {
            int oneCount;

            var result = string.Empty;

            var value = count % 100;

            var isTenth = value > 10 && value < 20;

            var caseIndex = (int) @case;

            if (isTenth)
            {
                oneCount = 0;

                var stringValue = ordinal ? OrdinalOneCases[value][caseIndex] : OneCases[value][caseIndex];

                value = count / 100;

                result = value > 0 ? GetHundreds(@case, value, false) + " " + stringValue : stringValue;
            }
            else
            {
                value = count % 10;

                oneCount = value;

                if (value != 0)
                {
                    result = GetOnes(@case, value, sex, animated);
                    count -= value;
                }

                value = count % 100 / 10;

                if (value != 0)
                {
                    result = string.IsNullOrEmpty(result)
                        ? GetTens(@case, value, sex, ordinal)
                        : GetTens(@case, value, sex, false) + " " + result;
                }

                value = count / 100;

                if (value != 0)
                {
                    result = string.IsNullOrEmpty(result)
                        ? GetHundreds(@case, value, ordinal)
                        : GetHundreds(@case, value, false) + " " + result;
                }
            }

            if (denominator != 1 && !string.IsNullOrEmpty(result))
            {
                switch (oneCount)
                {
                    case 1:
                        result += " " + NumericNames[denominator][0][caseIndex];
                        break;
                    case 2:
                    case 3:
                    case 4:
                        result += " " + NumericNames[denominator][1][caseIndex];
                        break;
                    case 0:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                        result += " " + NumericNames[denominator][2][caseIndex];
                        break;
                }
            }

            return result;
        }

        private static string GetHundreds(Case @case, int count, bool ordinal)
        {
            var result = HundredCases[ordinal][count][(int) @case];

            return result;
        }

        private static string GetTens(Case @case, int count, Sex sex, bool ordinal)
        {
            var caseIndex = (int) @case;
            var result = ordinal ? OrdinalTenCases[sex][count][caseIndex] : TenCases[count][caseIndex];

            return result;
        }

        private static string GetOnes(Case @case, int count, Sex sex, bool animated)
        {
            int index;

            if (@case == Case.Accusative && count >= 1 && count <= 4 && sex == Sex.Male)
            {
                index = animated ? (int) Case.Genetive : (int) Case.Nominative;
            }
            else
            {
                index = (int) @case;
            }

            var result = count == 1 || count == 2 ? SexOneCases[count][sex][index] : OneCases[count][index];

            return result;
        }
    }
}
