//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestChild.ConsoleProjects.BookingForCall {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://aisdo.itopcase.ru/Booking", ConfigurationName="BookingForCall.IBookingService")]
    public interface IBookingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/GetHotels", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/GetHotelsResponse")]
        RestChild.Comon.Dto.Booking.ResultSearch GetHotels(RestChild.Comon.Dto.Booking.BookingSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/GetHotels", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/GetHotelsResponse")]
        System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.ResultSearch> GetHotelsAsync(RestChild.Comon.Dto.Booking.BookingSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/VariationPlacement", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/VariationPlacementResponse")]
        RestChild.Comon.Dto.Booking.BookingVariationPlacementResponse VariationPlacement(RestChild.Comon.Dto.Booking.BookingVariationPlacementRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/VariationPlacement", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/VariationPlacementResponse")]
        System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.BookingVariationPlacementResponse> VariationPlacementAsync(RestChild.Comon.Dto.Booking.BookingVariationPlacementRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/MakePreBooking", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/MakePreBookingResponse")]
        RestChild.Comon.Dto.Booking.BookingResult MakePreBooking(RestChild.Comon.Dto.Booking.BookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/MakePreBooking", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/MakePreBookingResponse")]
        System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.BookingResult> MakePreBookingAsync(RestChild.Comon.Dto.Booking.BookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/MakeBooking", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/MakeBookingResponse")]
        RestChild.Comon.Dto.Booking.BookingResult MakeBooking(RestChild.Comon.Dto.Booking.BookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/MakeBooking", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/MakeBookingResponse")]
        System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.BookingResult> MakeBookingAsync(RestChild.Comon.Dto.Booking.BookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/ReleaseBooking", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/ReleaseBookingResponse")]
        RestChild.Comon.Dto.Booking.BookingResult ReleaseBooking(RestChild.Comon.Dto.Booking.BookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/ReleaseBooking", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/ReleaseBookingResponse")]
        System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.BookingResult> ReleaseBookingAsync(RestChild.Comon.Dto.Booking.BookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/ReleasePreBooking", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/ReleasePreBookingResponse")]
        RestChild.Comon.Dto.Booking.BookingResult ReleasePreBooking(RestChild.Comon.Dto.Booking.BookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://aisdo.itopcase.ru/Booking/IBookingService/ReleasePreBooking", ReplyAction="http://aisdo.itopcase.ru/Booking/IBookingService/ReleasePreBookingResponse")]
        System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.BookingResult> ReleasePreBookingAsync(RestChild.Comon.Dto.Booking.BookingRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookingServiceChannel : RestChild.ConsoleProjects.BookingForCall.IBookingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookingServiceClient : System.ServiceModel.ClientBase<RestChild.ConsoleProjects.BookingForCall.IBookingService>, RestChild.ConsoleProjects.BookingForCall.IBookingService {
        
        public BookingServiceClient() {
        }
        
        public BookingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RestChild.Comon.Dto.Booking.ResultSearch GetHotels(RestChild.Comon.Dto.Booking.BookingSearchRequest request) {
            return base.Channel.GetHotels(request);
        }
        
        public System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.ResultSearch> GetHotelsAsync(RestChild.Comon.Dto.Booking.BookingSearchRequest request) {
            return base.Channel.GetHotelsAsync(request);
        }
        
        public RestChild.Comon.Dto.Booking.BookingVariationPlacementResponse VariationPlacement(RestChild.Comon.Dto.Booking.BookingVariationPlacementRequest request) {
            return base.Channel.VariationPlacement(request);
        }
        
        public System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.BookingVariationPlacementResponse> VariationPlacementAsync(RestChild.Comon.Dto.Booking.BookingVariationPlacementRequest request) {
            return base.Channel.VariationPlacementAsync(request);
        }
        
        public RestChild.Comon.Dto.Booking.BookingResult MakePreBooking(RestChild.Comon.Dto.Booking.BookingRequest request) {
            return base.Channel.MakePreBooking(request);
        }
        
        public System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.BookingResult> MakePreBookingAsync(RestChild.Comon.Dto.Booking.BookingRequest request) {
            return base.Channel.MakePreBookingAsync(request);
        }
        
        public RestChild.Comon.Dto.Booking.BookingResult MakeBooking(RestChild.Comon.Dto.Booking.BookingRequest request) {
            return base.Channel.MakeBooking(request);
        }
        
        public System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.BookingResult> MakeBookingAsync(RestChild.Comon.Dto.Booking.BookingRequest request) {
            return base.Channel.MakeBookingAsync(request);
        }
        
        public RestChild.Comon.Dto.Booking.BookingResult ReleaseBooking(RestChild.Comon.Dto.Booking.BookingRequest request) {
            return base.Channel.ReleaseBooking(request);
        }
        
        public System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.BookingResult> ReleaseBookingAsync(RestChild.Comon.Dto.Booking.BookingRequest request) {
            return base.Channel.ReleaseBookingAsync(request);
        }
        
        public RestChild.Comon.Dto.Booking.BookingResult ReleasePreBooking(RestChild.Comon.Dto.Booking.BookingRequest request) {
            return base.Channel.ReleasePreBooking(request);
        }
        
        public System.Threading.Tasks.Task<RestChild.Comon.Dto.Booking.BookingResult> ReleasePreBookingAsync(RestChild.Comon.Dto.Booking.BookingRequest request) {
            return base.Channel.ReleasePreBookingAsync(request);
        }
    }
}
