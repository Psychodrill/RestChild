@using RestChild.Comon
@model RestChild.Web.Models.TourModel

<div role="tabpanel" class="tab-pane @(Model.ActiveTab == "RoomRates" ? "active" : string.Empty)" id="RoomRates">
    <!--Номерной фонд-->
    <div>&nbsp;</div>
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="TourVolumePanel">
            <h3 class="panel-title">
                Номерной фонд
            </h3>
        </div>
        <div id="TourVolumeCollapse" class="panel-collapse" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body">
                <div id="TourVolumeWithParents" class="@(Model.Data.TypeOfRest == null || !Model.Data.TypeOfRest.NeedAccomodation ? "hidden" : string.Empty)">
                    <fieldset class="form-horizontal">
                        @if (Model.IsEditable)
                        {
                            <div class="form-group col-md-12">
                                <button type="button" class="btn btn-primary" id="addTourVolume"><i class="glyphicon glyphicon-plus"></i> Добавить</button>
                            </div>
                        }

                        <div class="col-md-12">
                            <table class="table table-striped table-hover @(Model.Data.Volumes == null || !Model.Data.Volumes.Any(v => v.TypeOfRoomsId.HasValue) ? "hidden" : string.Empty)" id="TourVolumeTable">
                                <thead>
                                <tr>
                                    <th width="40%">Наименование</th>
                                    <th width="20%">Количество номеров</th>
                                    <th>Удобства</th>
                                    <th widht="5%"></th>
                                </tr>
                                </thead>
                                <tbody>
                                @if (Model.Data.Volumes != null)
                                {
                                    foreach (var volume in Model.Data.Volumes.Where(v => v.TypeOfRoomsId.HasValue))
                                    {
                                        <tr>
                                            @{
                                                var typeOfRoom = volume.NullSafe(t => t.TypeOfRooms);
                                            }
                                            <td class="TourVolumeName">@(typeOfRoom != null ? Html.Raw(typeOfRoom.ToString().FormatEx()) : null)</td>
                                            <td class="col-sm-1">
                                                <input type="text" maxlength="5" name="CountRooms" class="col-sm-12 form-control count-places" value="@volume.CountRooms" @(!Model.IsEditable ? "disabled='disabled'" : string.Empty)/>
                                            </td>
                                            <td>@(volume.TypeOfRooms != null ? volume.TypeOfRooms.GetConviencsString().FormatEx() : string.Empty)</td>
                                            <td>
                                                @if (Model.IsEditable)
                                                {
                                                    <a href="javascript:void(0);" class="removeTourVolume pull-right">
                                                        <i class="glyphicon glyphicon-remove"></i>
                                                    </a>
                                                }

                                                <input type="hidden" name="Id" value="@volume.Id"/>
                                                <input type="hidden" name="HotelsId" value="@volume.HotelsId" class="HotelsId"/>
                                                <input type="hidden" name="TypeOfRoomsId" value="@volume.TypeOfRoomsId" class="fond-TypeOfRoomsId"/>
                                                <input type="hidden" name="CountPlace" value="@volume.CountPlace"/>
                                                <input type="hidden" name="CountBusyPlace" value="@volume.CountBusyPlace"/>
                                                <input type="hidden" name="CountBusyRooms" value="@volume.CountBusyRooms"/>
                                            </td>
                                        </tr>
                                    }
                                }
                                </tbody>
                            </table>
                        </div>
                    </fieldset>
                </div>
                <div id="TourVolumeForCamps" class="@(Model.Data.TypeOfRest == null || Model.Data.TypeOfRest.NeedAccomodation ? "hidden" : string.Empty)">
                    <div class="panel-body">
                        <fieldset class="form-horizontal">
                            <div class="form-group col-md-12">
                                <label class="col-md-3 control-label text-right">Количество мест<span class="requared">*</span></label>
                                <div class="col-md-9">
                                    @{ var campTourVolume = Model.Data.Volumes != null ? Model.Data.Volumes.FirstOrDefault(v => !v.TypeOfRoomsId.HasValue) : null; }
                                    <input type="hidden" name="Id" value="@(campTourVolume != null ? campTourVolume.Id : 0)"/>
                                    @if (Model.IsEditable)
                                    {
                                        <input type="text" class="form-control count-rooms" name="CountPlace" value="@(campTourVolume != null ? campTourVolume.CountPlace : 0)" maxlength="5"/>
                                    }
                                    else
                                    {
                                        <span style="line-height: 36px">
                                            @(campTourVolume != null ? campTourVolume.CountPlace : 0)
                                        </span>
                                        <input type="hidden" name="CountPlace" value="@(campTourVolume != null ? campTourVolume.HotelsId : 0)" class="count-rooms"/>
                                    }
                                    <input type="hidden" name="HotelsId" value="@(campTourVolume != null ? campTourVolume.HotelsId : 0)" class="HotelsId"/>
                                    <input type="hidden" name="CountRooms" value="@(campTourVolume != null ? campTourVolume.CountRooms : 0)"/>
                                    <input type="hidden" name="CountBusyPlace" value="@(campTourVolume != null ? campTourVolume.CountBusyPlace : 0)"/>
                                    <input type="hidden" name="CountBusyRooms" value="@(campTourVolume != null ? campTourVolume.CountBusyRooms : 0)"/>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
