@using PagedList.Mvc
@using RestChild.Comon
@using RestChild.Comon.Enumeration
@using RestChild.Web.Controllers
@model RestChild.Web.Models.Limits.ListOfChildsListModel
@{
	ViewBag.Title = "Заявки от учреждений (списки детей)";
	Layout = "~/Views/Shared/_SearchLayout.cshtml";
	ViewBag.SearchAction = "ListOfChildsList";
	ViewBag.InsertAction = "ListOfChildsEdit";
	ViewBag.Controller = "Limits";
	ViewBag.Caption = "";
	ViewBag.InsertButtonCaption = "Добавить список";
	ViewBag.SearchPanelCaption = "Параметры";
	ViewBag.NeedInsertButton = false;
	ViewBag.SearchButtonCaption = "Выбрать";
	ViewBag.NeedClearButton = false;
	ViewBag.NeedCaption = false;
	ViewBag.NeedSearchButton = false;
}

@section searchForm
{
	<h3 style="margin-top: 0px">Заявки от учреждений (списки детей)</h3>
	@if (Model.LimitOnOrganization != null)
	{
		if (Security.HasRightForSomeOrganization(AccessRightEnum.Limits.LimitByOrganization))
		{
			<a href="@Url.Action("OrganizationList", "Limits", new {yearOfRestId = Model.YearOfRestId, limitOnVedomstvoId = Model.LimitOnOrganization.LimitOnVedomstvoId})">Вернуться</a>
		}
		else
		{
			<a href="@Url.Action("Organization", "Limits", new { yearOfRestId = Model.YearOfRestId, organizationId = Model.LimitOnOrganization.OrganizationId })">Вернуться</a>
		}
	}
	<div class="form-group">
		<label class="col-md-2 control-label text-right">Организация:</label>
		<div class="col-md-6">
			<div class="well well-sm">@Html.Raw(Model.NullSafe(m => m.OrganizationName).FormatEx())</div>
			@Html.HiddenFor(m => m.OrganizationId)
		</div>
		<label class="col-md-2 control-label text-right">Год кампании:</label>
		<div class="col-md-2">
			<span style="line-height: 34px">@Html.Raw(Model.NullSafe(m => m.LimitOnOrganization.LimitOnVedomstvo.YearOfRest.Year).FormatEx())</span>
			@Html.HiddenFor(m => m.YearOfRestId)
		</div>
	</div>
	<div class="form-group">
		<label class="col-md-2 control-label text-right">Вид квоты:</label>
		<div class="col-md-6">
			<div class="well well-sm">@Html.Raw(Model.NullSafe(m => m.LimitOnOrganization.TypeOfLimitList.Name).FormatEx())</div>
			@Html.HiddenFor(m => m.OrganizationId)
		</div>
	</div>
	<div class="form-group">
		<label class="col-md-2 control-label text-right">Размещение:</label>
		<div class="col-md-6">
			<span style="line-height: 34px">@Html.Raw(Model.NullSafe(m => m.LimitOnOrganization.Tour.ToString()).FormatEx())</span>
			@Html.HiddenFor(m => m.LimitOnOrganizationId)
		</div>
	</div>

	<span class="well-sm well">Размер квоты <span class="badge">@Model.LimitOnOrganization.NullSafe(l => l.Volume)</span></span>
	<span class="well-sm well">Осталось <span class="badge">@(Model.LimitOnOrganization.NullSafe(l => l.Volume) - Model.Select(v => v.CountChild).Sum())</span></span>
	<span class="well-sm well">Сформировано <span class="badge">@(Model.Where(s => s.StateId != StateMachineStateEnum.Limit.List.Formation).Select(v => v.CountChild).Sum())</span></span>
	<div class="row">&nbsp;</div>
}

@section additionalInserts{}

@section searchResult
{
	@if (Model.LimitOnOrganization != null)
	{
		using (Html.BeginForm("ListOfChildsChangeStatus", "Limits", FormMethod.Post, new { @class = "postForm" }))
		{
			@Html.Hidden("OrganizationId", Model.OrganizationId)
			@Html.Hidden("LimitOnOrganizationId", Model.LimitOnOrganizationId)
			@Html.Hidden("YearOfRestId", Model.YearOfRestId)
			@Html.Hidden("OrganizationId", Model.OrganizationId)
			@Html.HiddenFor(m => m.StringStateCode, new { @class = "stringStateCode" })
			@Html.HiddenFor(m => m.StringCommentaryCode, new { @class = "stringCommentaryCode" })
			@Html.HiddenFor(m => m.LimitOnOrganization.TypeOfLimitListId, new { @id = "tlid" })
			@Html.Partial("Assets/_StatePanel", Model.State)
		}
		if (Model.Errors != null)
		{
		<div class="row">
			<ul class="error-ul-block">
				@foreach (var error in Model.Errors)
				{
					<li>@error</li>
				}
			</ul>
		</div>
		}
		if (Model.Any())
		{
			<table class="table table-striped table-hover">
				<thead>
					<tr>
						<th class="text-center">№</th>
					@if (Model.LimitOnOrganization == null || Model.LimitOnOrganization.TypeOfLimitListId == (long) TypeOfLimitListEnum.Profile)
					{
						<th class="text-center">
							Наименование коллектива/вид спорта
						</th>
					}
					else
					{
						<th class="text-center">
							Наименование группы
						</th>
					}
						@if (Model.LimitOnOrganization == null || Model.LimitOnOrganization.TypeOfLimitListId == (long) TypeOfLimitListEnum.Profile)
						{
							<th class="text-center">Категория детей</th>
						}
						<th class="text-center">Место отдыха</th>
						<th class="text-center">Время отдыха</th>
						<th class="text-center">Детей</th>
						<th class="text-center">Сопровождающих</th>
						<th class="text-center">Статус</th>
						<th class="text-center"></th>
					</tr>
				</thead>
				<tbody>
					@{ int rowNumber = 1; }
					@foreach (var org in Model)
					{
						<tr>
							<td class="text-center">@(rowNumber++)</td>
							<td>
								@Html.Raw(org.NullSafe(o => o.Name).FormatEx())
							</td>
							@if (Model.LimitOnOrganization == null || Model.LimitOnOrganization.TypeOfLimitListId == (long) TypeOfLimitListEnum.Profile)
							{
								<td>
									@Html.Raw(org.NullSafe(o => o.ListOfChildsCategory.Name).FormatEx())
								</td>
							}
							<td>
								@Html.Raw(org.NullSafe(o => o.Tour.Hotels.Name).FormatEx())
							</td>
							<td>
								@if (org.Tour != null)
								{
									@Html.Raw(string.Format("{0} - {1}", org.Tour.DateIncome.FormatEx(), org.Tour.DateOutcome.FormatEx()))
								}
								else
								{
									@Html.Raw(org.TimeOfRest.NullSafe(t => t.Name).FormatEx())
								}
							</td>
							<td>@org.CountChild.FormatEx()</td>
							<td>@org.CountAttendants.FormatEx()</td>
							<td>@org.State.NullSafe(t => t.Name).FormatEx()</td>
							<td class="text-center">
								@Html.ActionLink(" ", "ListOfChildsEdit", new { id = org.Id }, new { @class = " glyphicon glyphicon-eye-open", target = "_blank", title = "Перейти в список" })
								<a class="glyphicon glyphicon-print" title="Список детей" href="@Url.Action("GetListChilds", "Pdf", new {id = org.Id})"></a>
								@if ((Model.LimitOnOrganization == null || Model.LimitOnOrganization.TypeOfLimitListId == (long)TypeOfLimitListEnum.Profile) && org.Tour != null && Model.NullSafe(m => m.State.State.Id == StateMachineStateEnum.Limit.Organization.Confirmed) && Model.NullSafe(d => d.LimitOnOrganization.Tour.StateId) == StateMachineStateEnum.Tour.Formed)
								{
									<a class="glyphicon glyphicon-file" title="Квитанции" href="@Url.Action("GetPaymentListOfChilds", "Pdf", new {id = org.Id})"></a>
								}
							</td>

						</tr>
					}
				</tbody>
			</table>
		}
		else
		{
			<div class="row">
				&nbsp;
			</div>
			<div class="row">
				<div class="col-md-12">
					<p></p>
				</div>
			</div>
		}
	}
	else
	{
		<div class="row">
			<div class="col-md-12">
				<p></p>
			</div>
		</div>
	}
}

@section styles{
	@Styles.Render("~/Content/bootstrap-multiselect.css")
	@Styles.Render("~/Content/css/select2.css")
	@Styles.Render("~/Content/css/select2-bootstrap.css")
}

@section scripts{
	<script type="text/javascript" src="~/Scripts/doT.js"></script>
	@Scripts.Render("~/bundles/global")
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/Scripts/bootstrap-multiselect.js")
	@Scripts.Render("~/Scripts/assets/multipleSelect.js")
	@Scripts.Render("~/Scripts/select2.min.js")
	@Scripts.Render("~/Scripts/select2_locale_ru.js")
	@Scripts.Render("~/Scripts/StateScript.js")
	@Scripts.Render("~/Scripts/moment.js")
	@Scripts.Render("~/Scripts/assets/HistoryLinkControl.js")
	<script type="text/javascript" language="javascript">
		$(function () {
			$('select.select2').select2();

			$('.change-submit').change(function () {
				$('.mainForm').submit();
			});

		});
	</script>

	@Html.Partial("Assets/HistoryLinkTemplate")
}
