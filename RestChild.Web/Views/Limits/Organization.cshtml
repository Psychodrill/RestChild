@using PagedList.Mvc
@using RestChild.Comon
@using RestChild.Comon.Enumeration
@using RestChild.Web.Controllers
@model RestChild.Web.Models.Limits.OrganizationModel
@{
	ViewBag.Title = "Заявки от учреждений (списки детей)";
	Layout = "~/Views/Shared/_SearchLayout.cshtml";
	ViewBag.SearchAction = "Organization";
	ViewBag.InsertAction = "Organization";
	ViewBag.Controller = "Limits";
	ViewBag.Caption = "";
	ViewBag.SearchPanelCaption = "Параметры";
	ViewBag.NeedInsertButton = false;
	ViewBag.SearchButtonCaption = "Выбрать";
	ViewBag.NeedClearButton = false;
	ViewBag.NeedCaption = false;
	ViewBag.NeedSearchButton = false;
}

@section searchForm
{
	<h3 style="margin-top: 0px">Заявки от учреждений (списки детей)</h3>
	<div class="form-group">
		<label class="col-md-2 control-label text-right">Организация:</label>
		<div class="col-md-6">
			@if (Model.OnlyOneOrganization)
			{
				<div class="well-sm well">@Html.Raw(Model.NullSafe(m => m.OrganizationName).FormatEx())</div>
			}
			@Html.HiddenFor(m => m.OrganizationId, new { @class = "form-control change-submit", data_default_text = Model.NullSafe(l => l.OrganizationName) })
		</div>
		<label class="col-md-2 control-label text-right">Год кампании:</label>
		<div class="col-md-2">
			@Html.DropDownListFor(m => m.YearOfRestId, new SelectList(Model.ListOfYears, "Id", "Name"), new { @class = "form-control select2 change-submit", autocomplete = "off" })
		</div>
	</div>
}

@section additionalInserts{}

@section searchResult
{
	@if (Model.Items != null && Model.Items.SubGroups != null && Model.Items.SubGroups.Any())
	{
		<text>
		</text>
		foreach (var group in Model.Items.SubGroups)
		{
			<text>
				<div class="bs-callout bs-callout-info">
					<h4 class="bs-callout-info">@Html.Raw(group.Name.FormatEx())</h4>
					@foreach (var subgroup in group.SubGroups)
					{
						<text>
							<h5>@Html.Raw(subgroup.Name.FormatEx())</h5>
							<table class="table table-striped table-condensed">
								<thead>
									<tr>
										<th>Размещение</th>
										<th class="text-center">Размер квоты</th>
										<th class="text-center">Сформировано</th>
										<th class="text-center">Статус</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var item in subgroup.SubGroups)
									{
										var place = item.Items.FirstOrDefault();
										<tr>
											<td>
												<a href="@Url.Action("ListOfChildsList", new { limitOnOrganizationId = place.NullSafe(p=>p.Id) })" target="_blank">@Html.Raw(item.Name.FormatEx())</a>
											</td>
											<td class="text-center">
												@Html.Raw(place.NullSafe(p => p.Volume).FormatEx())
											</td>
											<td class="text-center">
												@Html.Raw(item.FormedVolume.FormatEx())
											</td>
											<td class="text-center">
												@Html.Raw(place.NullSafe(p => p.State.Name).FormatEx())
											</td>
										</tr>
									}
								</tbody>
							</table>
				</text>
					}
				</div>

			</text>
		}
		@*<table class="table table-striped table-hover">
				<thead>
					<tr>
						<th class="text-center">№</th>
						<th class="text-center">Наименование коллектива/вид спорта</th>
						<th class="text-center">Категория детей</th>
						<th class="text-center">Место отдыха</th>
						<th class="text-center">Время отдыха</th>
						<th class="text-center">Детей</th>
						<th class="text-center">Сопровождающих</th>
						<th class="text-center">Статус</th>
						<th class="text-center"></th>
					</tr>
				</thead>
				<tbody>
					@{ int rowNumber = 1; }
					@foreach (var org in Model)
					{
						<tr>
							<td class="text-center">@(rowNumber++)</td>
							<td>
								@Html.Raw(org.NullSafe(o => o.Name).FormatEx())
							</td>
							<td>
								@Html.Raw(org.NullSafe(o => o.ListOfChildsCategory.Name).FormatEx())
							</td>
							<td>
								@Html.Raw(org.NullSafe(o => o.Tour.Hotels.Name).FormatEx())
							</td>
							<td>
								@if (org.Tour != null)
								{
									@Html.Raw(string.Format("{0} - {1}", org.Tour.DateIncome.FormatEx(), org.Tour.DateOutcome.FormatEx()))
								}
								else
								{
									@Html.Raw(org.TimeOfRest.NullSafe(t => t.Name).FormatEx())
								}
							</td>
							<td>@org.CountChild.FormatEx()</td>
							<td>@org.CountAttendants.FormatEx()</td>
							<td>@org.State.NullSafe(t => t.Name).FormatEx()</td>
							<td class="text-center">
								@Html.ActionLink(" ", "ListOfChildsEdit", new { id = org.Id }, new { @class = " glyphicon glyphicon-eye-open", target = "_blank", title = "Перейти в список" })
								<a class="glyphicon glyphicon-print" title="Список детей" href="@Url.Action("GetListChilds", "Pdf", new {id = org.Id})"></a>
								@if (org.Tour != null)
								{
									<a class="glyphicon glyphicon-file" title="Квитанции" href="@Url.Action("GetPaymentListOfChilds", "Pdf", new {id = org.Id})"></a>
								}
							</td>

						</tr>
					}
				</tbody>
			</table>*@
	}
	else if(Model.OrganizationId.HasValue)
	{
		<div class="row">
			&nbsp;
		</div>
		<div class="row">
			<div class="col-md-12">
				<label>Квота не распределена</label>
			</div>
		</div>
	}
	else
	{
		<div class="row">
			&nbsp;
		</div>
		<div class="row">
			<div class="col-md-12">
				<p></p>
			</div>
		</div>
	}
}

@section styles{
	@Styles.Render("~/Content/bootstrap-multiselect.css")
	@Styles.Render("~/Content/css/select2.css")
	@Styles.Render("~/Content/css/select2-bootstrap.css")
}

@section scripts{
	<script type="text/javascript" src="~/Scripts/doT.js"></script>
	@Scripts.Render("~/bundles/global")
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/Scripts/bootstrap-multiselect.js")
	@Scripts.Render("~/Scripts/assets/multipleSelect.js")
	@Scripts.Render("~/Scripts/select2.min.js")
	@Scripts.Render("~/Scripts/select2_locale_ru.js")
	@Scripts.Render("~/Scripts/StateScript.js")
	@Scripts.Render("~/Scripts/moment.js")
	@Scripts.Render("~/Scripts/assets/HistoryLinkControl.js")
	<script type="text/javascript" language="javascript">
		$(function () {
			$('select.select2').select2();

			$('.change-submit').change(function () {
				$('.mainForm').submit();
			});

			@if (!Model.OnlyOneOrganization)
				{
					<text>
			$('#@Html.IdFor(m => m.OrganizationId)').select2({
				initSelection: function (element, callback) {
					if (element.attr('data-default-text')) {
						var data = { id: element.val(), text: element.attr('data-default-text') };
						callback(data);
					}
				},
				minimumInputLength: 0,
				ajax: {
					url: rootPath + '/api/Limits/GetOrganizationList',
					dataType: 'json',
					quietMillis: 250,
					data: function (term, page) {
						return {
							query: term
						};
					},
					results: function (data, page) {
						for (var i in data) {
							data[i] = { id: data[i].id, text: data[i].name }
						}
						return {
							results: data
						};
					},
					cache: true
				}
			});
			</text>
				}

		});
	</script>

	@Html.Partial("Assets/HistoryLinkTemplate")
}
