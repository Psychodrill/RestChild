@using RestChild.Domain
@using RestChild.Comon
@using RestChild.Comon.Enumeration
@using RestChild.Domain
@using RestChild.Web.Extensions

@model  RestChild.Domain.PupilsHealthStatus

@{
    var restrictionTypes = new SelectList(((List<TypeOfRestriction>) ViewBag.RestrictionTypes ?? new List<TypeOfRestriction>(0)).Select(o => new {Id = (long?) o.Id, o.Name}).InsertAt(new {Id = (long?) null, Name = "-- Не выбрано --"}), "Id", "Name");
}

<div class="pupil-health-status">
    <h4>
        <hr/>
    </h4>
    @Html.HiddenFor(m => m.Id)
    <div class="row form-group type-of-restriction">
        <label class="col-md-3 control-label">Вид ограничения</label>
        <div class="col-md-9">
            @Html.DropDownListFor(r => r.TypeOfRestrictionId, restrictionTypes, new {@class = "form-control select2 restriction-select"}).DisableIf(() => Model.Id > 0 || Model.PupilGroupId.HasValue && Model.PupilGroup.StateId != StateMachineStateEnum.PupilGroup.Formation)
        </div>
    </div>
    <div class="row form-group type-of-subrestriction @(Model.TypeOfRestriction == null || !Model.TypeOfRestriction.Subs.Any() ? " hidden" : string.Empty)">
        <label class="col-md-3 control-label">Подвид ограничения</label>
        <div class="col-md-9">
            @Html.HiddenFor(r => r.TypeOfSubRestrictionId, new {@class = "form-control subrestriction-select", titleText = Model.TypeOfSubRestriction != null ? Model.TypeOfSubRestriction.Name : "--Не указано--"}).DisableIf(() => Model.Id > 0 || Model.PupilGroupId.HasValue && Model.PupilGroup.StateId != StateMachineStateEnum.PupilGroup.Formation)
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-5 control-label text-right">Кол-во воспитанников с указанными ограничениями</label>
        <div class="col-md-2">
            @Html.TextBoxFor(model => model.PupilsCount, new {@class = "form-control", maxlength = 1000, autocomplete = "off"}).DisableIf(() => Model.Id > 0 || Model.PupilGroupId.HasValue && Model.PupilGroup.StateId != StateMachineStateEnum.PupilGroup.Formation)
        </div>
        @if (!Model.PupilGroupId.HasValue || Model.PupilGroup.StateId == StateMachineStateEnum.PupilGroup.Formation)
        {
            <div class="col-md-1 col-md-offset-4 text-right">
                <button type="button" class="btn btn-danger btn-primary form-control remove-pupil-health-status">
                    <i class="glyphicon glyphicon-trash"></i>
                </button>
            </div>
        }
    </div>
</div>
