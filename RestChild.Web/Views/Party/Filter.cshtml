@using RestChild.Web.App_Code
@using RestChild.Web.Extensions
@model RestChild.Web.Models.PartyFilter

@{
	Layout = null;
}

<div class="row">
	<h4 class="col-md-4">
		Дети. Всего: <span id="countTotalSrc">@Model.AllChildrenCount</span>. Не распределено: <span id="countUngroupedSrc">@Model.VacantChildrenCount</span>
	</h4>
	<div class="col-md-4">
		<div class="radio col-md-6">
			<label>@Html.RadioButton("Grouping", "Ungrouped", !Model.IsGrouped)Разгруппировано</label>
		</div>
		<div class="radio col-md-6">
			<label>@Html.RadioButton("Grouping", "Grouped", Model.IsGrouped)Сгруппировано</label>
		</div>
	</div>

</div>

<div class="row form-group">
	<div class="col-md-1">
		<div class="radio col-md-12">
			<label>@Html.RadioButton("IsMale", "", !Model.IsMale.HasValue).DisableIf(Model.IsGrouped)Все</label>
			<label>@Html.RadioButton("IsMale", "True", Model.IsMale == true).DisableIf(Model.IsGrouped)Мужской</label>
			<label>@Html.RadioButton("IsMale", "False", Model.IsMale == false).DisableIf(Model.IsGrouped)Женский</label>
		</div>
	</div>

	<div class="col-md-3">
		<div class="text-center">Возраст</div>
		<div class="col-md-6">
			@Html.TextBoxFor(m => m.AgeFrom, new { @class = "form-control" }).DisableIf(Model.IsGrouped)
		</div>
		<div class="col-md-6">
			@Html.TextBoxFor(m => m.AgeTo, new { @class = "form-control" }).DisableIf(Model.IsGrouped)
		</div>
	</div>

	<div class="col-md-4">
		<div class="checkbox col-md-4">
			@{
				var onlyNotAddedAttributes = new Dictionary<string, object>();
				if (Model.OnlyNotAdded ?? true)
				{
					onlyNotAddedAttributes["checked"] = "checked";
				}
			}
			<label>@Html.CheckBox("OnlyNotAdded", onlyNotAddedAttributes)Только не добавленные</label>
		</div>
		<div class="checkbox col-md-4">
			<label>@Html.CheckBoxFor(m => m.OnlyBenefits)Льготные путевки</label>
		</div>
		<div class="checkbox col-md-4">
			<label>@Html.CheckBoxFor(m => m.OnlySpecilized)Профильные путевки</label>
		</div>
	</div>

	<div class="col-md-2">
		<div class="text-center">Тематика смены</div>
		@Html.DropDownListFor(m => m.SubjectOfRestid, SelectListHelper.Create(Model.SubjectsOfRest, s => new SelectListItem() { Value = s.Id.ToString(), Text = s.Name }), new { @class = "form-control" })
	</div>

	<div class="col-md-2">
		<div class="text-center">ФИО</div>
		@Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
	</div>
</div>

<div class="row form-group">
	<div class="col-md-2">
		@if (Model.IsEditable)
		{
			<button type="button" id="AddToParty" class="btn btn-primary col-md-12" @(Model.OpenedPartyId.HasValue ? string.Empty : "disabled=disabled")><span class="glyphicon glyphicon-plus"></span>Включить в отряд</button>
		}
	</div>
	<div class="col-md-2 col-md-offset-3">
		<button class="btn btn-default btn-filter">Применить</button>
	</div>
</div>

