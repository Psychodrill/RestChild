@using System.Web.Configuration
@using RestChild.Admin.Web
@using RestChild.Comon.Enumeration
@using RestChild.Admin.Web.Controllers
<!DOCTYPE html>
<html lang="@System.Globalization.CultureInfo.CurrentUICulture.Name">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="ROBOTS" content="NOINDEX, NOFOLLOW">
    <title>АИС Отдых @ViewBag.Title</title>

    @Styles.Render("~/Content/css-general")
    @Scripts.Render("~/bundles/modernizr")
    @Styles.Render("~/Content/assets/InfoPanel.css")
    @Styles.Render("~/Content/sticky-footer.css")
    @Styles.Render("~/Content/AlertPanel.css")
    @RenderSection("styles", required: false)
</head>
<body data-spy="scroll" data-target="#scrollspy" data-offset-top="60">
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            @if (Request.IsAuthenticated)
            {
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            }
            <a class="navbar-brand title-white" href="@Url.Action("Index", "Home")"></a>
        </div>
        @if (Request.IsAuthenticated)
        {
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @if (Security.HasAnyRightsForSomeOrganization(new[] {AccessRightEnum.Security.JournalSecurity}))
                    {
                        <li>@Html.ActionLink("Уведомления безопасности", "JournalSecurityEvents", "SecurityJournal")</li>
                    }
                    @if (Security.HasAnyRightsForSomeOrganization(new[] {AccessRightEnum.Security.JournalEntrance, AccessRightEnum.Security.JournalProceses, AccessRightEnum.Security.JournalRoles, AccessRightEnum.Security.JournalSessions}))
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="true">Журнал безопасности <span class="caret"></span></a>
                            <ul class="dropdown-menu" role="menu">
                                @if (Security.HasRightForSomeOrganization(AccessRightEnum.Security.JournalEntrance))
                                {
                                    <li>@Html.ActionLink("Вход в систему", "JournalEntrance", "SecurityJournal")</li>
                                }
                                @if (Security.HasRightForSomeOrganization(AccessRightEnum.Security.JournalProceses))
                                {
                                    <li>@Html.ActionLink("Программы и процессы", "JournalProcesses", "SecurityJournal")</li>
                                }
                                @if (Security.HasRightForSomeOrganization(AccessRightEnum.Security.IteractionsWithOutSystems))
                                {
                                    <li>@Html.ActionLink("Взаимодействие с ИС", "JournalOutSystemIteractionEvents", "SecurityJournal")</li>
                                }
                                @if (Security.HasRightForSomeOrganization(AccessRightEnum.Security.JournalRoles))
                                {
                                    <li>@Html.ActionLink("Права доступа", "JournalRightsAndRoles", "SecurityJournal")</li>
                                }
                                @if (Security.HasRightForSomeOrganization(AccessRightEnum.Security.JournalSessions))
                                {
                                    <li>@Html.ActionLink("Активные сессии", "JournalActiveSessions", "SecurityJournal")</li>
                                    <li>@Html.ActionLink("Завершенные сессии", "JournalStopedSessions", "SecurityJournal")</li>
                                }
                                @if (Security.HasRightForSomeOrganization(AccessRightEnum.GiftReserved.MassCancel))
                                {
                                    <li>@Html.ActionLink("Отмена зарезервированных подарков", "History", "GiftCancel")</li>
                                }
                            </ul>
                        </li>
                    }


                    @if (Security.HasAnyRightsForSomeOrganization(new[] {AccessRightEnum.AccountManage, AccessRightEnum.Security.SecuritySettingsView, AccessRightEnum.Security.SecuritySettingsEdit}))
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="true"> Настройки безопасности<span class="caret"></span></a>
                            <ul class="dropdown-menu" role="menu">
                                @if (Security.HasAnyRightsForSomeOrganization(new[] {AccessRightEnum.Security.SecuritySettingsView, AccessRightEnum.Security.SecuritySettingsEdit}))
                                {
                                    <li>@Html.ActionLink("Общие настройки безопасности", "", "SecuritySettings")</li>
                                }
                                @if (Security.HasRight(AccessRightEnum.AccountManage))
                                {
                                    <li>@Html.ActionLink("Пользователи", "AccountList", "Account")</li>
                                    <li>@Html.ActionLink("Роли", "Search", "Role")</li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        }
    </div>
</div>
<div class="infoPanel"></div>
<div class="container body-content">
    @RenderBody()
    <!--<hr/>
    <footer>
        <p></p>
    </footer>-->
</div>
<div id="AlertContainer" class="alert-panel"></div>
<div class="modal fade" id="PleaseWaitDiv" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <h3><img class="text-center" width="40" height="40" src="@Url.Content("~/Content/images/spinner.gif")"/> Пожалуйста, подождите...</h3>
            </div>
        </div>
    </div>
</div>
<footer class="footer">
    <div class="container">
        <p class="text-muted" style="padding: 9px">
            В случае возникновения проблем и ошибок при работе с Системой, а также выявлении некорректных данных просим обращаться в службу технической поддержки
            по email: <a href="mailto:aiso_hd@mos.ru">aiso_hd@mos.ru</a> или по телефону <a href="tel:+74959898025">+7(495) 989-80-25</a>.
        </p>
    </div>
</footer>
<script type="text/javascript" language="javascript">
		var rootPath = window.location.href.replace(window.location.pathname, '').replace(window.location.search, '').replace(window.location.hash, '').replace('#', '').replace('?', '') + '@Url.Content("~/")';
	</script>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryui")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/jqueryinputmask")
@Scripts.Render("~/bundles/layoutScripts")

@RenderSection("scripts", required: false)
<script type="text/javascript">
		$(function () {
			$('input[type="text"]').attr('autocomplete', 'off');
			@if (!string.IsNullOrEmpty(Request["reloaded"]) || (TempData[BaseController.RedirectedKey] != null))
			{
			    <text>
			ShowAlert("Данные были обновлены, так как были изменены с последнего открытия карточки", "alert-danger", "glyphicon-ok", true);
			</text>
			}
			@{
			    var errors = TempData[BaseController.ErrorsKey] as List<string>;
			    if (errors != null && errors.Any())
			    {
			        <text>
			var errorMsg = '';

			</text>
			        foreach (var error in errors)
			        {
			            <text>
			errorMsg = errorMsg + '<li>@error</li>';
			</text>
			        }
			        <text>
			errorMsg = '<ul>' + errorMsg + '</ul>';
			ShowAlert(errorMsg, "alert-danger", "", true);
			</text>
			    }

			    var messages = TempData[BaseController.MessageKey] as List<string>;
			    if (messages != null && messages.Any())
			    {
			        <text>
			var messageMsg = '';

			</text>
			        foreach (var message in messages)
			        {
			            <text>
			messageMsg = messageMsg + '<li>@message</li>';
			</text>
			        }
			        <text>
			messageMsg = '<ul>' + messageMsg + '</ul>';
			ShowAlert(messageMsg, "alert-success", "", true);
			</text>
			    }
			}

			$(window).resize(function () {
				$('body').css('padding-top', $('.navbar-fixed-top').height());
			});

			setTimeout(function () {
				$('body').css('padding-top', $('.navbar-fixed-top').height());
			}, 10);
		});
	</script>
<!-- ver: @MvcApplication.Version -->
</body>
</html>
